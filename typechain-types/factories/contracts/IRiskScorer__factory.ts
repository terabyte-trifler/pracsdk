/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRiskScorer,
  IRiskScorerInterface,
} from "../../contracts/IRiskScorer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateRiskScore",
    outputs: [
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "updateRiskParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minScore",
        type: "uint256",
      },
    ],
    name: "validateScore",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRiskScorer__factory {
  static readonly abi = _abi;
  static createInterface(): IRiskScorerInterface {
    return new Interface(_abi) as IRiskScorerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRiskScorer {
    return new Contract(address, _abi, runner) as unknown as IRiskScorer;
  }
}
